{"version":3,"sources":["components/Signup.js","components/Signin.js","components/Test.js","AppRouter.js","App.js","reportWebVitals.js","actions/constants.js","reducers/reducers.js","store.js","index.js"],"names":["useStyles","makeStyles","theme","root","height","image","backgroundImage","backgroundRepeat","backgroundColor","palette","type","grey","backgroundSize","backgroundPosition","paper","margin","spacing","display","flexDirection","alignItems","avatar","secondary","main","form","width","marginTop","submit","icons","Signup","classes","React","useState","data","setData","useEffect","fetch","then","res","json","message","Grid","container","component","className","item","xs","sm","md","Paper","elevation","square","Box","justifyContent","minHeight","Avatar","Typography","variant","noValidate","TextField","required","fullWidth","id","label","name","autoComplete","autoFocus","placeholder","Button","color","justify","m","pt","icon","faGoogle","size","faFacebook","faTwitter","Link","href","SignInSide","CssBaseline","FormControlLabel","control","Checkbox","value","mt","Test","AppRouter","path","exact","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","UPDATE_STORE","initState","test","users","store","createStore","state","action","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.4924f0f1.chunk.js","sourcesContent":["import React from 'react'\nimport './Signup.css';\nimport Button from '@material-ui/core/Button';\nimport Avatar from '@material-ui/core/Avatar';\nimport TextField from '@material-ui/core/TextField';\nimport Link from '@material-ui/core/Link';\nimport Box from '@material-ui/core/Box';\nimport Typography from '@material-ui/core/Typography';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport {\n    faGoogle,\n    faFacebook,\n    faTwitter\n  } from '@fortawesome/free-brands-svg-icons';\nimport Grid from '@material-ui/core/Grid';\nimport Paper from '@material-ui/core/Paper';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    height: '100vh',\n  },\n  image: {\n    backgroundImage: 'url(https://source.unsplash.com/random)',\n    backgroundRepeat: 'no-repeat',\n    backgroundColor:\n      theme.palette.type === 'light' ? theme.palette.grey[50] : theme.palette.grey[900],\n    backgroundSize: 'cover',\n    backgroundPosition: 'center',\n  },\n  paper: {\n    margin: theme.spacing(8, 4),\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n  },\n  avatar: {\n    margin: theme.spacing(1),\n    backgroundColor: theme.palette.secondary.main,\n  },\n  form: {\n    width: '100%',\n    marginTop: theme.spacing(1),\n  },\n  submit: {\n    margin: theme.spacing(3, 0, 2),\n  },\n  \n  icons: {\n    margin: theme.spacing(1)\n  }\n}));\n\nfunction Signup() {\n  const classes = useStyles();\n\n  const [data, setData] = React.useState(null); \n\n  React.useEffect(() => {\n    fetch(\"/api\")\n      .then((res) => res.json())\n      .then((data) => setData(data.message));\n  }, []);\n\n    return (\n      <Grid container component=\"main\" className={classes.root}>\n      <Grid item xs={false} sm={4} md={7} className={classes.image} />\n      <Grid item xs={12} sm={8} md={5} component={Paper} elevation={6} square>\n      <Box display=\"flex\" justifyContent=\"center\" alignItems=\"center\" minHeight=\"100vh\">\n        <div className={classes.paper}>\n          <Avatar className={classes.avatar}>\n          </Avatar>\n          <p>{!data ? \"Loading...\" : data}</p>\n          <Typography component=\"h1\" variant=\"h5\">\n            Sign Up\n          </Typography>\n          <form className={classes.form} noValidate>\n          <TextField\n              variant=\"outlined\"\n              margin=\"normal\"\n              required\n              fullWidth\n              id=\"name\"\n              label=\"Name\"\n              name=\"name\"\n              autoComplete=\"name\"\n              autoFocus\n            />\n            <TextField\n              variant=\"outlined\"\n              margin=\"normal\"\n              required\n              fullWidth\n              id=\"email\"\n              label=\"Email Address\"\n              name=\"email\"\n              autoComplete=\"email\"\n              autoFocus\n            />\n            <TextField\n              variant=\"outlined\"\n              margin=\"normal\"\n              required\n              fullWidth\n              name=\"password\"\n              label=\"Password\"\n              type=\"password\"\n              id=\"password\"\n              autoComplete=\"current-password\"\n              placeholder=\"6+ Characters, 1 UpperCase, 1 number\"\n            />\n\n            <Button\n              type=\"submit\"\n              fullWidth\n              variant=\"contained\"\n              color=\"primary\"\n              className={classes.submit}\n            >\n              Create Account\n            </Button>\n        <Grid container justify='center' className={classes.icons}>\n        <Box m={1} pt={1} >\n          <FontAwesomeIcon icon={faGoogle} size='2x'/>\n          <FontAwesomeIcon icon={faFacebook} size='2x'/>\n          <FontAwesomeIcon icon={faTwitter} size='2x'/>\n        </Box>\n        </Grid>\n            <Grid container justify='center'>\n              <Grid item>\n                <Link href=\"/signin\" variant=\"body1\">\n                  {\"Already have an account? Login\"}\n                </Link>\n              </Grid>\n            </Grid>\n          </form>\n\n        </div>\n        </Box>\n      </Grid>\n      </Grid>\n    )\n}\n\nexport default Signup\n","import React from 'react';\nimport Avatar from '@material-ui/core/Avatar';\nimport Button from '@material-ui/core/Button';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport TextField from '@material-ui/core/TextField';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport Link from '@material-ui/core/Link';\nimport Paper from '@material-ui/core/Paper';\nimport Box from '@material-ui/core/Box';\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography';\nimport { makeStyles } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    height: '100vh',\n  },\n  image: {\n    backgroundImage: 'url(https://source.unsplash.com/random)',\n    backgroundRepeat: 'no-repeat',\n    backgroundColor:\n      theme.palette.type === 'light' ? theme.palette.grey[50] : theme.palette.grey[900],\n    backgroundSize: 'cover',\n    backgroundPosition: 'center',\n  },\n  paper: {\n    margin: theme.spacing(8, 4),\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n  },\n  avatar: {\n    margin: theme.spacing(1),\n    backgroundColor: theme.palette.secondary.main,\n  },\n  form: {\n    width: '100%',\n    marginTop: theme.spacing(1),\n  },\n  submit: {\n    margin: theme.spacing(3, 0, 2),\n  },\n}));\n\nexport default function SignInSide() {\n  const classes = useStyles();\n\n  return (\n    <Grid container component=\"main\" className={classes.root}>\n      <CssBaseline />\n      <Grid item xs={false} sm={4} md={7} className={classes.image} />\n      <Grid item xs={12} sm={8} md={5} component={Paper} elevation={6} square>\n        <div className={classes.paper}>\n          <Avatar className={classes.avatar}>\n          </Avatar>\n          <Typography component=\"h1\" variant=\"h5\">\n            Sign in\n          </Typography>\n          <form className={classes.form} noValidate>\n            <TextField\n              variant=\"outlined\"\n              margin=\"normal\"\n              required\n              fullWidth\n              id=\"email\"\n              label=\"Email Address\"\n              name=\"email\"\n              autoComplete=\"email\"\n              autoFocus\n            />\n            <TextField\n              variant=\"outlined\"\n              margin=\"normal\"\n              required\n              fullWidth\n              name=\"password\"\n              label=\"Password\"\n              type=\"password\"\n              id=\"password\"\n              autoComplete=\"current-password\"\n            />\n            <FormControlLabel\n              control={<Checkbox value=\"remember\" color=\"primary\" />}\n              label=\"Remember me\"\n            />\n            <Button\n              type=\"submit\"\n              fullWidth\n              variant=\"contained\"\n              color=\"primary\"\n              className={classes.submit}\n            >\n              Sign In\n            </Button>\n            <Grid container>\n              <Grid item xs>\n                <Link href=\"#\" variant=\"body2\">\n                  Forgot password?\n                </Link>\n              </Grid>\n              <Grid item>\n                <Link href=\"#\" variant=\"body2\">\n                  {\"Don't have an account? Sign Up\"}\n                </Link>\n              </Grid>\n            </Grid>\n            <Box mt={5}>\n            </Box>\n          </form>\n        </div>\n      </Grid>\n    </Grid>\n  );\n}\n","import React from 'react'\n\nfunction Test() {\n    return (\n        <div>\n            <h1>TEST PAGE</h1>\n        </div>\n    )\n}\n\nexport default Test\n","import React from \"react\";\nimport { BrowserRouter, Route, Switch } from \"react-router-dom\";\nimport Signup from \"./components/Signup\";\nimport Signin from \"./components/Signin\";\nimport Test from \"./components/Test\";\n\nconst AppRouter = () => {\n  return (\n    <div>\n      <BrowserRouter>\n        <Switch>\n          <Route path=\"/\" exact>\n              <Signup />\n          </Route>\n          <Route path=\"/signin\" exact>\n              <Signin />\n          </Route>\n          <Route path=\"/test\" exact>\n              <Test />\n          </Route> \n       \n        </Switch>\n\n      </BrowserRouter>\n    </div>\n  );\n};\n\nexport default AppRouter;\n","import './App.css';\nimport 'fontsource-roboto';\nimport AppRouter from './AppRouter';\n\n\n//react router dom\nfunction App() {\n  return (\n    <div className=\"App\">\n      <AppRouter/>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","export const ADD_A_TEST = \"ADD_A_TEST\";\nexport const UPDATE_STORE = \"UPDATE_STORE\"    \n","import { \n    UPDATE_STORE\n } from \"../actions/constants\";\n \n \nconst initState = {\n    test: [],\n    users: []\n}\n\nexport const someReducer = (state = initState,action) => {\n    switch(action.type){\n        case UPDATE_STORE: \n            return ({\n                state\n            })\n      \n        default:\n            return state\n    }\n}\n","// import { connect } from \"react-redux\";\nimport {someReducer} from \"./reducers/reducers\"\nimport { createStore } from \"redux\"\n\n\nconst initState = {\n    test: [],\n    users: []\n}\n\nexport const store = createStore(someReducer, initState);","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { Provider } from \"react-redux\"\nimport { store } from './store';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}